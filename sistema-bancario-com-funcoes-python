def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    if valor > saldo:
        print("‚ùå Opera√ß√£o falhou! Saldo insuficiente.")
    elif valor > limite:
        print("‚ùå Opera√ß√£o falhou! Valor excede o limite por saque.")
    elif numero_saques >= limite_saques:
        print("‚ùå Opera√ß√£o falhou! N√∫mero m√°ximo de saques excedido.")
    elif valor > 0:
        saldo -= valor
        extrato.append(f"Saque: R$ {valor:.2f}")
        numero_saques += 1
        print("‚úÖ Saque realizado com sucesso!")
    else:
        print("‚ùå Opera√ß√£o falhou! Valor inv√°lido.")
    return saldo, extrato, numero_saques

def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato.append(f"Dep√≥sito: R$ {valor:.2f}")
        print("‚úÖ Dep√≥sito realizado com sucesso!")
    else:
        print("‚ùå Opera√ß√£o falhou! Valor inv√°lido.")
    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print("\nüìÑ EXTRATO")
    print("\n".join(extrato) if extrato else "Nenhuma movimenta√ß√£o.")
    print(f"\nSaldo atual: R$ {saldo:.2f}")
    print("-" * 30)

def criar_usuario(usuarios):
    cpf = input("Informe o CPF (apenas n√∫meros): ")
    cpf = cpf.strip()

    for usuario in usuarios:
        if usuario["cpf"] == cpf:
            print("‚ùå Usu√°rio com esse CPF j√° existe.")
            return

    nome = input("Nome completo: ")
    nascimento = input("Data de nascimento (dd-mm-aaaa): ")
    endereco = input("Endere√ßo (logradouro, n¬∫ - bairro - cidade/UF): ")

    usuarios.append({"nome": nome, "nascimento": nascimento, "cpf": cpf, "endereco": endereco})
    print("‚úÖ Usu√°rio criado com sucesso!")

def filtrar_usuario(cpf, usuarios):
    for usuario in usuarios:
        if usuario["cpf"] == cpf:
            return usuario
    return None

def criar_conta(agencia, numero_conta, usuarios, contas):
    cpf = input("Informe o CPF do usu√°rio: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        conta = {"agencia": agencia, "numero": numero_conta, "usuario": usuario}
        contas.append(conta)
        print("‚úÖ Conta criada com sucesso!")
    else:
        print("‚ùå Usu√°rio n√£o encontrado.")

def listar_contas(contas):
    for conta in contas:
        usuario = conta["usuario"]
        print(f"Ag√™ncia: {conta['agencia']} | Conta: {conta['numero']} | Titular: {usuario['nome']}")

# Programa principal

usuarios = []
contas = []

saldo = 0
limite = 500
extrato = []
numero_saques = 0
LIMITE_SAQUES = 3
AGENCIA = "0001"

menu = """
[d] Depositar
[s] Sacar
[e] Extrato
[nu] Novo Usu√°rio
[nc] Nova Conta
[lc] Listar Contas
[q] Sair

=> """

while True:
    opcao = input(menu)

    if opcao == "d":
        valor = float(input("Valor do dep√≥sito: "))
        saldo, extrato = depositar(saldo, valor, extrato)

    elif opcao == "s":
        valor = float(input("Valor do saque: "))
        saldo, extrato, numero_saques = sacar(
            saldo=saldo, valor=valor, extrato=extrato,
            limite=limite, numero_saques=numero_saques,
            limite_saques=LIMITE_SAQUES)

    elif opcao == "e":
        exibir_extrato(saldo, extrato=extrato)

    elif opcao == "nu":
        criar_usuario(usuarios)

    elif opcao == "nc":
        numero_conta = len(contas) + 1
        criar_conta(AGENCIA, numero_conta, usuarios, contas)

    elif opcao == "lc":
        listar_contas(contas)

    elif opcao == "q":
        break

    else:
        print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
